[General]

network = artery.envmod.World

*.traci.core.version = 0

*.traci.launcher.typename = "ConnectLauncher"
*.traci.launcher.sumocfg = "Town04_traciApp.sumo.cfg"
*.traci.launcher.port = 8813
*.traci.launcher.clientId = 2
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"

# *.traci.launcher.typename = "PosixLauncher"
# *.traci.launcher.sumo = "sumo-gui"
# *.traci.launcher.port = 8813
# *.traci.launcher.extraOptions = "--num-clients 2"

*.traci.mapper.vehicleType = "artery.envmod.Car"
**.identityRegistryModule = "idRegistry"
**.scalar-recording = false
**.vector-recording = false

debug-on-errors = false
print-undisposed = false

sim-time-limit = 30s

**.debug = false
**.coreDebug = false


# Middleware will update services every 0.1s, but this does not correspond to the sending frequency of CAM & CPM
*.node[*].middleware.updateInterval = 0.1s   

*.node[*].middleware.datetime = "2018-03-19 10:00:00"

# Defines the services used by vehicles
*.node[0].middleware.services = xmldoc("servicesObj.xml")  # other
*.node[1].middleware.services = xmldoc("services.xml")  # ego
*.node[2].middleware.services = xmldoc("services.xml")
*.node[3].middleware.services = xmldoc("services.xml")

#*.node[*].middleware.F2MD_CPService.transmission.result-recording-modes = all
#*.node[*].middleware.F2MD_CPService.reception.result-recording-modes = all
*.node[*].middleware.F2MD_CPService.maxInterval = 1 s
*.node[*].middleware.F2MD_CPService.fixedRate = true


*.node[*].middleware.updateInterval = 0.01s
*.node[*].middleware.datetime = "2013-06-01 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")

# Defines the sensors on the vehicles
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")
*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true

# Sensors caracteristics
*.node[*].environmentModel.FrontRadar.fovRange = 200.0 m
*.node[*].environmentModel.FrontRadar.fovAngle = 40.0
*.node[*].environmentModel.FrontRadar.SegmentAngle = 4


#################
# CPM Attacks Parameters
#################

*.node[*].middleware.F2MD_CPService.START_CPM_ATTACK = 7
*.node[*].middleware.F2MD_CPService.MixCpLocalAttacks = false  # Use random attacks during the simulation
*.node[*].middleware.F2MD_CPService.RandomCpLocalMix = false
*.node[2].middleware.F2MD_CPService.CP_LOCAL_ATTACKER_PROB = 1 # test for injection attack

# Local Attack Types ... 0:Genuine, 1:DropObj, 2:DropAllObj, 3:DropObj_KeepSameID, 4:AddObj, 5:SingleRandomDist, 6:SingleRandomSpeed
# Local Attack Types ... 7:MultiConstDist, 8:MultiConstSpeed, 9:MultiRandomDist, 10:MultiRandomSpeed
# Local Attack Types ... 11:SingleConstDistOffset, 12:SingleConstSpeedOffset, 13:SingleRandomDistOffset, 14: SingleRandomSpeedOffset
# Local Attack Types ... 15:MultiConstDistOffset, 16:MultiConstSpeedOffset, 17:MultiRandomDistOffset, 18: MultiRandomSpeedOffset
# Local Attack Types ... 19:SingleConstDist, 20:SingleConstSpeed, 21:SingleRandomDistOffset_KeepSameID, 22:SingleRandomSpeedOffset_KeepSameID


# attack caracteristics
*.node[*].middleware.F2MD_CPService.Test_mode = 1
*.node[*].middleware.F2MD_CPService.CP_LOCAL_ATTACK_TYPE = 11  # if MixCpLocalAttacks = false, all attackers will use this attack type
*.node[*].middleware.F2MD_CPService.KeepSameID = true
*.node[*].middleware.F2MD_CPService.RandomDistOffsetX = 15
*.node[*].middleware.F2MD_CPService.RandomDistOffsetY = 0
*.node[*].middleware.F2MD_CPService.cpParVar = 0
*.node[*].middleware.F2MD_CPService.MaxRadius = 30

# check setting
*.node[*].middleware.F2MD_CPService.TOLERANCE_EXCEED_SPEED = 0.3
*.node[*].middleware.F2MD_CPService.TOLERANCE_DEARTH_SPEED = 0.3
*.node[*].middleware.F2MD_CPService.MAX_PLAUSIBLE_ANGLE_CHANGE = 90
*.node[*].middleware.F2MD_CPService.SegmentAngle = 4
*.node[*].middleware.F2MD_CPService.MaxMapBoundary = 1000

# Kalman Filter Setting
*.node[*].middleware.F2MD_CPService.KALMAN_MIN_POS_RANGE = 1.5
*.node[*].middleware.F2MD_CPService.MAX_KALMAN_TIME = 2.8
*.node[*].middleware.F2MD_CPService.KALMAN_POS_RANGE = 1.0
*.node[*].middleware.F2MD_CPService.KALMAN_SPEED_RANGE = 1.0
*.node[*].middleware.F2MD_CPService.KALMAN_MIN_SPEED_RANGE = 4.0

# Pseudonym change 
# NoChange 0, Periodical 1, Disposable 2 
# DistanceBased 3, Random 4, Car2car 5
*.node[*].middleware.F2MD_CPService.EnablePC = false
#*.node[*].middleware.F2MD_CPService.PC_TYPE = 1 
#*.node[*].middleware.F2MD_CPService.Period_Change_Time = 300

# Sensors caracteristics
*.node[*].middleware.F2MD_CPService.MaxRadarRange = 200
*.node[*].middleware.F2MD_CPService.MaxRadarAngle = 40
#################

# car type 
*.node[*].middleware.F2MD_CPService.VEHICLE_LENGTH = 3.66
*.node[*].middleware.F2MD_CPService.VEHICLE_WIDTH = 1.85