[General]
network = artery.envmod.World
*.traci.mapper.vehicleType = "artery.envmod.Car"
**.identityRegistryModule = "idRegistry"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"

##########################################################
#            Simulation parameters                       #
##########################################################

debug-on-errors = true
print-undisposed = false

#*.traci.core.startTime = 10s
sim-time-limit = 60s

**.scalar-recording = true
**.vector-recording = true


**.debug = false
**.coreDebug = false

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumocfg = "Tjunction.sumo.cfg"
# *.staticNodes.nodes = xmldoc("RSUs.xml")

# Middleware will update services every 0.1s, but this does not correspond to the sending frequency of CAM & CPM
*.node[*].middleware.updateInterval = 0.1s   

*.node[*].middleware.datetime = "2022-12-20 10:00:00"



[Config inet]
network = artery.inet.World
*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW


[Config CPM]
extends = inet
network = artery.envmod.World
*.traci.launcher.sumo = "sumo-gui"
**.identityRegistryModule = "idRegistry"
*.traci.mapper.vehicleType = "artery.envmod.Car"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].middleware.services = xmldoc("services-envmod.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")
*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true


##########################################################
#            /!\ ADVANCED CPM F2MD PARAMETERS  /!\           #
##########################################################

*.node[*].middleware.F2MD_CPService.START_CPM_ATTACK = 5  # Delay before first attack in seconds
*.node[*].middleware.F2MD_CPService.MAX_CPM_DELTATIME = 2  # Estimated maximum delay between CPM for tests with history
*.node[*].middleware.F2MD_CPService.MAX_CPM_HISTORY_TIME = 15 # Maximum CPM history delta time for consistency checks

# Parameters used to generate random attacks, in meters or meters/second
*.node[*].middleware.F2MD_CPService.cpParVar = 0.80
*.node[*].middleware.F2MD_CPService.RandomDistOffsetX = 60.0
*.node[*].middleware.F2MD_CPService.RandomDistOffsetY = 40.0
*.node[*].middleware.F2MD_CPService.RandomSpeed = 20.0
*.node[*].middleware.F2MD_CPService.RandomSpeedOffset = 7.0
*.node[*].middleware.F2MD_CPService.RandomAccel = 2.0