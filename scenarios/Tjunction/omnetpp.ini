[General]
network = artery.envmod.World
*.traci.mapper.vehicleType = "artery.envmod.Car"
**.identityRegistryModule = "idRegistry"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.withStoryboard = false
*.storyboard.python = "demo"


##########################################################
#            Simulation parameters                       #
##########################################################

debug-on-errors = false
print-undisposed = false

#*.traci.core.startTime = 10s
sim-time-limit = 50s

**.scalar-recording = false
**.vector-recording = false

**.debug = false
**.coreDebug = false

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumo = "sumo-gui"
# *.traci.launcher.typename = "ConnectLauncher"
*.traci.launcher.sumocfg = "Tjunction.sumo.cfg"
# *.traci.launcher.port = 8813
# *.traci.launcher.clientId = 2

# Middleware will update services every 0.1s, but this does not correspond to the sending frequency of CAM & CPM
*.node[*].middleware.updateInterval = 0.1s   
*.node[*].middleware.datetime = "2018-03-19 10:00:00"


# Defines the services used by vehicles
*.node[*].middleware.services = xmldoc("services.xml")
# *.node[0].middleware.services = xmldoc("services.xml")
# *.node[1].middleware.services = xmldoc("services.xml")
# *.node[2].middleware.services = xmldoc("services.xml")
# *.node[3].middleware.services = xmldoc("services.xml")
# *.node[4].middleware.services = xmldoc("services.xml")
# *.node[2].middleware.services = xmldoc("servicesObj.xml")


*.node[*].middleware.F2MD_CPService.transmission.result-recording-modes = all
*.node[*].middleware.F2MD_CPService.reception.result-recording-modes = all
*.node[*].middleware.F2MD_CPService.maxInterval = 1 s
*.node[*].middleware.F2MD_CPService.fixedRate = true


# Defines the sensors on the vehicles
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")
*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true

# Sensors caracteristics
*.node[*].environmentModel.FrontLongRangeRadar.fovRange = 200.0 m
*.node[*].environmentModel.FrontLongRangeRadar.fovAngle = 20.0
*.node[*].environmentModel.FrontLongRangeRadar.numSegments = 4
# If sensors values are modified, please update F2MD CPM Parameters sensor info down below


[Config with_RSU]

# *.staticNodes.nodes = xmldoc("RSUs.xml")
# *.rsu*.wlan[*].radio.transmitter.power = 47.9 mW
# *.rsu*.mobility.initialZ = 10m

# *.rsu*.middleware.datetime = "2018-01-26 09:15:00"
# *.rsu*.middleware.services = xmldoc("rsuservices.xml")
# *.rsu*.environmentModel.sensors = xmldoc("rsusensors.xml")
# *.rsu*.environmentModel.Radar.fovRange = 200m
# *.rsu*.environmentModel.Radar.fovAngle = 20.0
# *.rsu*.environmentModel.Radar.fovHeading = 0
# *.rsu*.environmentModel.SeeThrough.fovRange = 50m
# *.rsu*.environmentModel.*.drawSensorCone = true
# *.rsu*.environmentModel.*.drawLinesOfSight = true
# *.rsu*.environmentModel.*.drawDetectedObjects = true
# *.rsu*.environmentModel.*.drawBlockingObstacles = true
# *.rsu*.middleware.F2MD_RsuCPService.generationInterval = 1 s

##############################################################
#          /!\ ADVANCED CPM F2MD RSU PARAMETERS  /!\         #
##############################################################
#*.rsu*.middleware.F2MD_RsuCPService.MAX_CPM_HISTORY_TIME = 15 # Maximum CPM history delta time for consistency checks





[Config with_CPM_attacks]

##########################################################
#          /!\ BASE F2MD CPM PARAMETERS  /!\             #
##########################################################


#################
# CPM Attacks Parameters
#################

*.node[*].middleware.F2MD_CPService.MixCpLocalAttacks = false  # Use random attacks during the simulation
*.node[*].middleware.F2MD_CPService.RandomCpLocalMix = false

#*.node[*].middleware.F2MD_CPService.CP_LOCAL_ATTACKER_PROB = 0 # test for injection attack
*.node[3].middleware.F2MD_CPService.CP_LOCAL_ATTACKER_PROB = 1  # probability for a new node to be an attacker

# Local Attack Types ... 0:Genuine, 1:DropObj, 2:DropAllObj, 3:AddObj, 4:SingleRandomDist, 5:SingleRandomSpeed
# Local Attack Types ... 6:MultiConstDist, 7:MultiConstSpeed, 8:MultiRandomDist, 9:MultiRandomSpeed
# Local Attack Types ... 10:SingleConstDistOffset, 11:SingleConstSpeedOffset, 12:SingleRandomDistOffset, 13: SingleRandomSpeedOffset
# Local Attack Types ... 14:MultiConstDistOffset, 15:MultiConstSpeedOffset, 16:MultiRandomDistOffset, 17: MultiRandomSpeedOffset
# Local Attack Types ... 18:SingleConstDist, 19:SingleConstSpeed,


#*.node[2].middleware.F2MD_CPService.CP_LOCAL_ATTACK_TYPE = 5  # if MixCpLocalAttacks = false, all attackers will use this attack type
*.node[*].middleware.F2MD_CPService.CP_LOCAL_ATTACK_TYPE = 0
*.node[*].middleware.F2MD_CPService.KeepSameID = false


# Sensors caracteristics
*.node[*].middleware.F2MD_CPService.MaxRadarRange = 200
*.node[*].middleware.F2MD_CPService.MaxRadarAngle = 20
#################

##########################################################
#          /!\ ADVANCED CPM F2MD PARAMETERS  /!\         #
##########################################################

*.node[*].middleware.F2MD_CPService.START_CPM_ATTACK = 20  # Delay before first attack in seconds
*.node[*].middleware.F2MD_CPService.MAX_CPM_DELTATIME = 1  # Estimated maximum delay between CPM for tests with history
*.node[*].middleware.F2MD_CPService.MAX_CPM_HISTORY_TIME = 15 # Maximum CPM history delta time for consistency checks


# Parameters used to generate random attacks, in meters or meters/second
*.node[*].middleware.F2MD_CPService.cpParVar = 0.80
*.node[*].middleware.F2MD_CPService.RandomDistOffsetX = 60.0
*.node[*].middleware.F2MD_CPService.RandomDistOffsetY = 40.0
*.node[*].middleware.F2MD_CPService.RandomSpeed = 80.0
*.node[*].middleware.F2MD_CPService.RandomSpeedOffset = 7.0
*.node[*].middleware.F2MD_CPService.RandomAccel = 2.0


*.node[*].middleware.F2MD_CPService.TOLERANCE_EXCEED_SPEED = 0.3
*.node[*].middleware.F2MD_CPService.TOLERANCE_DEARTH_SPEED = 0.3
*.node[*].middleware.F2MD_CPService.MAX_PLAUSIBLE_ANGLE_CHANGE = 90
*.node[*].middleware.F2MD_CPService.SegmentAngle = 4
*.node[*].middleware.F2MD_CPService.MaxMapBoundary = 1000

# Kalman Filter Setting
*.node[*].middleware.F2MD_CPService.KALMAN_MIN_POS_RANGE = 3.0
*.node[*].middleware.F2MD_CPService.MAX_KALMAN_TIME = 2.0
*.node[*].middleware.F2MD_CPService.KALMAN_POS_RANGE = 3.0
*.node[*].middleware.F2MD_CPService.KALMAN_SPEED_RANGE = 1.0


# Pseudonym change 
# NoChange 0, Periodical 1, Disposable 2 
# DistanceBased 3, Random 4, Car2car 5
*.node[*].middleware.F2MD_CPService.EnablePC = false
#*.node[*].middleware.F2MD_CPService.PC_TYPE = 1 
#*.node[*].middleware.F2MD_CPService.Period_Change_Time = 300

